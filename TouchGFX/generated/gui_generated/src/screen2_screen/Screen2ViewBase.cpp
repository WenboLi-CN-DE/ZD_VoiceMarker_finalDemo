/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen2_screen/Screen2ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

Screen2ViewBase::Screen2ViewBase() :
    buttonCallback(this, &Screen2ViewBase::buttonCallbackHandler)
{

    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    image1.setXY(0, 0);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_BACKGROUNDS_MAIN_BG_TEXTURE_800X480PX_ID));

    box1.setPosition(96, 32, 355, 141);
    box1.setColor(touchgfx::Color::getColorFromRGB(222, 222, 222));
    box1.setAlpha(0);

    textArea1.setXY(100, 47);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea1.setLinespacing(0);
    Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_S6TU).getText());
    textArea1.setWildcard(textArea1Buffer);
    textArea1.resizeToCurrentText();
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9QBO));

    textArea2.setXY(105, 89);
    textArea2.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea2.setLinespacing(0);
    Unicode::snprintf(textArea2Buffer, TEXTAREA2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_61KP).getText());
    textArea2.setWildcard(textArea2Buffer);
    textArea2.resizeToCurrentText();
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MHOT));

    textArea3.setXY(105, 134);
    textArea3.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea3.setLinespacing(0);
    textArea3Buffer[0] = 0;
    textArea3.setWildcard(textArea3Buffer);
    textArea3.resizeToCurrentText();
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3WIT));

    textArea4.setXY(105, 182);
    textArea4.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea4.setLinespacing(0);
    Unicode::snprintf(textArea4Buffer, TEXTAREA4_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_C1H4).getText());
    textArea4.setWildcard(textArea4Buffer);
    textArea4.resizeToCurrentText();
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9R4G));

    textArea5.setXY(105, 229);
    textArea5.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea5.setLinespacing(0);
    textArea5Buffer[0] = 0;
    textArea5.setWildcard(textArea5Buffer);
    textArea5.resizeToCurrentText();
    textArea5.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VDNS));

    textArea6.setXY(105, 277);
    textArea6.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea6.setLinespacing(0);
    textArea6Buffer[0] = 0;
    textArea6.setWildcard(textArea6Buffer);
    textArea6.resizeToCurrentText();
    textArea6.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HD8U));

    button1.setXY(64, 359);
    button1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_SQUARE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_SQUARE_SMALL_PRESSED_ID));
    button1.setAction(buttonCallback);

    textArea7.setXY(56, 419);
    textArea7.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea7.setLinespacing(0);
    textArea7.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TRAK));

    buttonWithLabel1.setXY(574, 359);
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    buttonWithLabel1.setLabelText(touchgfx::TypedText(T___SINGLEUSE_D4EC));
    buttonWithLabel1.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonWithLabel1.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonWithLabel1.setAction(buttonCallback);

    buttonHttpGet.setXY(428, 70);
    buttonHttpGet.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    buttonHttpGet.setLabelText(touchgfx::TypedText(T___SINGLEUSE_JX21));
    buttonHttpGet.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonHttpGet.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonHttpGet.setAction(buttonCallback);

    buttonTftpGet.setXY(428, 143);
    buttonTftpGet.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    buttonTftpGet.setLabelText(touchgfx::TypedText(T___SINGLEUSE_RGZK));
    buttonTftpGet.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonTftpGet.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonTftpGet.setAction(buttonCallback);

    buttonHttpPost.setXY(616, 74);
    buttonHttpPost.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    buttonHttpPost.setLabelText(touchgfx::TypedText(T___SINGLEUSE_0EBA));
    buttonHttpPost.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonHttpPost.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonHttpPost.setAction(buttonCallback);

    buttonTftpPut.setXY(616, 145);
    buttonTftpPut.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    buttonTftpPut.setLabelText(touchgfx::TypedText(T___SINGLEUSE_DXUC));
    buttonTftpPut.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonTftpPut.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonTftpPut.setAction(buttonCallback);

    buttonFtpGet.setXY(428, 217);
    buttonFtpGet.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    buttonFtpGet.setLabelText(touchgfx::TypedText(T___SINGLEUSE_5J49));
    buttonFtpGet.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonFtpGet.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonFtpGet.setAction(buttonCallback);

    buttonFtpPut.setXY(616, 217);
    buttonFtpPut.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    buttonFtpPut.setLabelText(touchgfx::TypedText(T___SINGLEUSE_HUKM));
    buttonFtpPut.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonFtpPut.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonFtpPut.setAction(buttonCallback);

    add(__background);
    add(image1);
    add(box1);
    add(textArea1);
    add(textArea2);
    add(textArea3);
    add(textArea4);
    add(textArea5);
    add(textArea6);
    add(button1);
    add(textArea7);
    add(buttonWithLabel1);
    add(buttonHttpGet);
    add(buttonTftpGet);
    add(buttonHttpPost);
    add(buttonTftpPut);
    add(buttonFtpGet);
    add(buttonFtpPut);
}

void Screen2ViewBase::setupScreen()
{

}

void Screen2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &button1)
    {
        //Interaction1
        //When button1 clicked change screen to Screen1
        //Go to Screen1 with screen transition towards East
        application().gotoScreen1ScreenSlideTransitionEast();
    }
    else if (&src == &buttonWithLabel1)
    {
        //Interaction2
        //When buttonWithLabel1 clicked call virtual function
        //Call functionSetHttpFlag
        functionSetHttpFlag();
    }
    else if (&src == &buttonHttpGet)
    {
        //Interaction3
        //When buttonHttpGet clicked call virtual function
        //Call functionHttpGet
        functionHttpGet();
    }
    else if (&src == &buttonTftpGet)
    {
        //Interaction4
        //When buttonTftpGet clicked call virtual function
        //Call functionTftpGet
        functionTftpGet();
    }
    else if (&src == &buttonHttpPost)
    {
        //Interaction6
        //When buttonHttpPost clicked call virtual function
        //Call functionHttpPost
        functionHttpPost();
    }
    else if (&src == &buttonTftpPut)
    {
        //Interaction5
        //When buttonTftpPut clicked call virtual function
        //Call functionTftpPut
        functionTftpPut();
    }
    else if (&src == &buttonFtpGet)
    {
        //Interaction7
        //When buttonFtpGet clicked call virtual function
        //Call functionFtpGet
        functionFtpGet();
    }
    else if (&src == &buttonFtpPut)
    {
        //Interaction8
        //When buttonFtpPut clicked call virtual function
        //Call functionFtpPut
        functionFtpPut();
    }
}
