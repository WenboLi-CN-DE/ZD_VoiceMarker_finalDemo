/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/sub_busload_eth_screen/sub_Busload_ETHViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>


sub_Busload_ETHViewBase::sub_Busload_ETHViewBase() :
    buttonCallback(this, &sub_Busload_ETHViewBase::buttonCallbackHandler),
    flexButtonCallback(this, &sub_Busload_ETHViewBase::flexButtonCallbackHandler)
{

    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);

    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    image1.setXY(0, 0);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_E_1156000_300B6C29_ID));
    image1.setAlpha(101);

    containerETH1.setPosition(209, 187, 80, 107);

    circleETH1.setPosition(0, 0, 80, 80);
    circleETH1.setCenter(40, 40);
    circleETH1.setRadius(30);
    circleETH1.setLineWidth(0);
    circleETH1.setArc(0, 360);
    circleETH1Painter.setColor(touchgfx::Color::getColorFromRGB(144, 255, 0));
    circleETH1.setPainter(circleETH1Painter);
    containerETH1.add(circleETH1);

    ButtonETH1.setBoxWithBorderPosition(0, 0, 50, 50);
    ButtonETH1.setBorderSize(5);
    ButtonETH1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    ButtonETH1.setPosition(15, 15, 50, 50);
    ButtonETH1.setAlpha(0);
    containerETH1.add(ButtonETH1);

    textETH1.setXY(18, 84);
    textETH1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textETH1.setLinespacing(0);
    textETH1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0UTX));
    containerETH1.add(textETH1);

    containerETH2.setPosition(315, 187, 80, 107);

    circleETH2.setPosition(0, 0, 80, 80);
    circleETH2.setCenter(40, 40);
    circleETH2.setRadius(30);
    circleETH2.setLineWidth(0);
    circleETH2.setArc(0, 360);
    circleETH2Painter.setColor(touchgfx::Color::getColorFromRGB(144, 255, 0));
    circleETH2.setPainter(circleETH2Painter);
    containerETH2.add(circleETH2);

    ButtonETH2.setBoxWithBorderPosition(0, 0, 50, 50);
    ButtonETH2.setBorderSize(5);
    ButtonETH2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    ButtonETH2.setPosition(15, 15, 50, 50);
    ButtonETH2.setAlpha(0);
    containerETH2.add(ButtonETH2);

    textETH2.setXY(18, 84);
    textETH2.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textETH2.setLinespacing(0);
    textETH2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_WDNV));
    containerETH2.add(textETH2);

    containerETH3.setPosition(410, 187, 80, 107);

    circleETH3.setPosition(0, 0, 80, 80);
    circleETH3.setCenter(40, 40);
    circleETH3.setRadius(30);
    circleETH3.setLineWidth(0);
    circleETH3.setArc(0, 360);
    circleETH3Painter.setColor(touchgfx::Color::getColorFromRGB(144, 255, 0));
    circleETH3.setPainter(circleETH3Painter);
    containerETH3.add(circleETH3);

    ButtonETH3.setBoxWithBorderPosition(0, 0, 50, 50);
    ButtonETH3.setBorderSize(5);
    ButtonETH3.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    ButtonETH3.setPosition(15, 15, 50, 50);
    ButtonETH3.setAlpha(0);
    containerETH3.add(ButtonETH3);

    textETH3.setXY(18, 84);
    textETH3.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textETH3.setLinespacing(0);
    textETH3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_63FZ));
    containerETH3.add(textETH3);

    containerETH4.setPosition(511, 187, 80, 107);

    circleETH4.setPosition(0, 0, 80, 80);
    circleETH4.setCenter(40, 40);
    circleETH4.setRadius(30);
    circleETH4.setLineWidth(0);
    circleETH4.setArc(0, 360);
    circleETH4Painter.setColor(touchgfx::Color::getColorFromRGB(144, 255, 0));
    circleETH4.setPainter(circleETH4Painter);
    containerETH4.add(circleETH4);

    ButtonETH4.setBoxWithBorderPosition(0, 0, 50, 50);
    ButtonETH4.setBorderSize(5);
    ButtonETH4.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    ButtonETH4.setPosition(15, 15, 50, 50);
    ButtonETH4.setAlpha(0);
    containerETH4.add(ButtonETH4);

    textETH4.setXY(18, 84);
    textETH4.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textETH4.setLinespacing(0);
    textETH4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OASU));
    containerETH4.add(textETH4);

    containerCAN.setPosition(137, 430, 50, 50);

    Button_CAN.setBoxWithBorderPosition(0, 0, 50, 50);
    Button_CAN.setBorderSize(5);
    Button_CAN.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    Button_CAN.setPosition(0, 0, 50, 50);
    Button_CAN.setAlpha(0);
    Button_CAN.setAction(flexButtonCallback);
    containerCAN.add(Button_CAN);

    textAreaCAN.setXY(9, 14);
    textAreaCAN.setColor(touchgfx::Color::getColorFromRGB(161, 157, 157));
    textAreaCAN.setLinespacing(0);
    textAreaCAN.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MCDK));
    containerCAN.add(textAreaCAN);

    containerLIN.setPosition(238, 430, 54, 50);

    Button_LIN.setBoxWithBorderPosition(0, 0, 55, 50);
    Button_LIN.setBorderSize(5);
    Button_LIN.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    Button_LIN.setPosition(-2, 0, 55, 50);
    Button_LIN.setAlpha(0);
    Button_LIN.setAction(flexButtonCallback);
    containerLIN.add(Button_LIN);

    textAreaLIN.setXY(9, 14);
    textAreaLIN.setColor(touchgfx::Color::getColorFromRGB(161, 157, 157));
    textAreaLIN.setLinespacing(0);
    textAreaLIN.setTypedText(touchgfx::TypedText(T___SINGLEUSE_7FLP));
    containerLIN.add(textAreaLIN);

    containerUART.setPosition(333, 430, 52, 50);

    Button_UART.setBoxWithBorderPosition(0, 0, 47, 50);
    Button_UART.setBorderSize(5);
    Button_UART.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    Button_UART.setPosition(4, 0, 47, 50);
    Button_UART.setAlpha(0);
    Button_UART.setAction(flexButtonCallback);
    containerUART.add(Button_UART);

    textAreaUART.setXY(5, 14);
    textAreaUART.setColor(touchgfx::Color::getColorFromRGB(161, 157, 157));
    textAreaUART.setLinespacing(0);
    textAreaUART.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VRMM));
    containerUART.add(textAreaUART);

    containerFlexray.setPosition(410, 430, 102, 50);

    Button_Flexray.setBoxWithBorderPosition(0, 0, 102, 50);
    Button_Flexray.setBorderSize(5);
    Button_Flexray.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    Button_Flexray.setPosition(0, 0, 102, 50);
    Button_Flexray.setAlpha(0);
    Button_Flexray.setAction(flexButtonCallback);
    containerFlexray.add(Button_Flexray);

    textAreaFlexray.setXY(13, 14);
    textAreaFlexray.setColor(touchgfx::Color::getColorFromRGB(161, 157, 157));
    textAreaFlexray.setLinespacing(0);
    textAreaFlexray.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OD4R));
    containerFlexray.add(textAreaFlexray);

    containerETH.setPosition(534, 430, 102, 50);

    Button_ETH.setBoxWithBorderPosition(0, 0, 102, 50);
    Button_ETH.setBorderSize(5);
    Button_ETH.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    Button_ETH.setPosition(0, 0, 102, 50);
    Button_ETH.setAlpha(0);
    containerETH.add(Button_ETH);

    textAreaETH.setXY(13, 14);
    textAreaETH.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textAreaETH.setLinespacing(0);
    textAreaETH.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SH49));
    containerETH.add(textAreaETH);

    Button_Bus_Main.setXY(0, 0);
    Button_Bus_Main.setBitmaps(touchgfx::Bitmap(BITMAP_IC_ACTION_ARROW_LEFT_LIGHT_ID), touchgfx::Bitmap(BITMAP_IC_ACTION_ARROW_LEFT_ID));
    Button_Bus_Main.setAction(buttonCallback);

    add(__background);
    add(image1);
    add(containerETH1);
    add(containerETH2);
    add(containerETH3);
    add(containerETH4);
    add(containerCAN);
    add(containerLIN);
    add(containerUART);
    add(containerFlexray);
    add(containerETH);
    add(Button_Bus_Main);
}

void sub_Busload_ETHViewBase::setupScreen()
{

}

void sub_Busload_ETHViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &Button_Bus_Main)
    {
        //Interaction1
        //When Button_Bus_Main clicked change screen to MainBoard
        //Go to MainBoard with no screen transition
        application().gotoMainBoardScreenNoTransition();
    }
}

void sub_Busload_ETHViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &Button_CAN)
    {
        //Interaction2
        //When Button_CAN clicked change screen to sub_Busload_CAN
        //Go to sub_Busload_CAN with no screen transition
        application().gotosub_Busload_CANScreenNoTransition();
    }
    else if (&src == &Button_LIN)
    {
        //Interaction3
        //When Button_LIN clicked change screen to sub_Busload_LIN
        //Go to sub_Busload_LIN with no screen transition
        application().gotosub_Busload_LINScreenNoTransition();
    }
    else if (&src == &Button_UART)
    {
        //Interaction4
        //When Button_UART clicked change screen to sub_Busload_UART
        //Go to sub_Busload_UART with no screen transition
        application().gotosub_Busload_UARTScreenNoTransition();
    }
    else if (&src == &Button_Flexray)
    {
        //Interaction5
        //When Button_Flexray clicked change screen to sub_Busload_Flexray
        //Go to sub_Busload_Flexray with no screen transition
        application().gotosub_Busload_FlexrayScreenNoTransition();
    }
}
