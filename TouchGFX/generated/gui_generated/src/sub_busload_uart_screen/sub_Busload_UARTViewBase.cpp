/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/sub_busload_uart_screen/sub_Busload_UARTViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>


sub_Busload_UARTViewBase::sub_Busload_UARTViewBase() :
    buttonCallback(this, &sub_Busload_UARTViewBase::buttonCallbackHandler),
    flexButtonCallback(this, &sub_Busload_UARTViewBase::flexButtonCallbackHandler)
{

    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);

    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    image1.setXY(0, 0);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_E_1156000_300B6C29_ID));
    image1.setAlpha(101);

    containerUART1.setPosition(209, 105, 80, 107);

    circleUART1.setPosition(0, 0, 80, 80);
    circleUART1.setCenter(40, 40);
    circleUART1.setRadius(30);
    circleUART1.setLineWidth(0);
    circleUART1.setArc(0, 360);
    circleUART1Painter.setColor(touchgfx::Color::getColorFromRGB(144, 255, 0));
    circleUART1.setPainter(circleUART1Painter);
    containerUART1.add(circleUART1);

    ButtonUART1.setBoxWithBorderPosition(0, 0, 50, 50);
    ButtonUART1.setBorderSize(5);
    ButtonUART1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    ButtonUART1.setPosition(15, 15, 50, 50);
    ButtonUART1.setAlpha(0);
    containerUART1.add(ButtonUART1);

    textUART1.setXY(18, 84);
    textUART1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textUART1.setLinespacing(0);
    textUART1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_QRI4));
    containerUART1.add(textUART1);

    containerUART2.setPosition(315, 105, 80, 107);

    circleUART2.setPosition(0, 0, 80, 80);
    circleUART2.setCenter(40, 40);
    circleUART2.setRadius(30);
    circleUART2.setLineWidth(0);
    circleUART2.setArc(0, 360);
    circleUART2Painter.setColor(touchgfx::Color::getColorFromRGB(144, 255, 0));
    circleUART2.setPainter(circleUART2Painter);
    containerUART2.add(circleUART2);

    ButtonUART2.setBoxWithBorderPosition(0, 0, 50, 50);
    ButtonUART2.setBorderSize(5);
    ButtonUART2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    ButtonUART2.setPosition(15, 15, 50, 50);
    ButtonUART2.setAlpha(0);
    containerUART2.add(ButtonUART2);

    textUART2.setXY(18, 84);
    textUART2.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textUART2.setLinespacing(0);
    textUART2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DERH));
    containerUART2.add(textUART2);

    containerUART3.setPosition(410, 105, 80, 107);

    circleUART3.setPosition(0, 0, 80, 80);
    circleUART3.setCenter(40, 40);
    circleUART3.setRadius(30);
    circleUART3.setLineWidth(0);
    circleUART3.setArc(0, 360);
    circleUART3Painter.setColor(touchgfx::Color::getColorFromRGB(144, 255, 0));
    circleUART3.setPainter(circleUART3Painter);
    containerUART3.add(circleUART3);

    ButtonUART3.setBoxWithBorderPosition(0, 0, 50, 50);
    ButtonUART3.setBorderSize(5);
    ButtonUART3.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    ButtonUART3.setPosition(15, 15, 50, 50);
    ButtonUART3.setAlpha(0);
    containerUART3.add(ButtonUART3);

    textUART3.setXY(18, 84);
    textUART3.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textUART3.setLinespacing(0);
    textUART3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_S8YS));
    containerUART3.add(textUART3);

    containerUART4.setPosition(511, 105, 80, 107);

    circleUART4.setPosition(0, 0, 80, 80);
    circleUART4.setCenter(40, 40);
    circleUART4.setRadius(30);
    circleUART4.setLineWidth(0);
    circleUART4.setArc(0, 360);
    circleUART4Painter.setColor(touchgfx::Color::getColorFromRGB(144, 255, 0));
    circleUART4.setPainter(circleUART4Painter);
    containerUART4.add(circleUART4);

    ButtonUART4.setBoxWithBorderPosition(0, 0, 50, 50);
    ButtonUART4.setBorderSize(5);
    ButtonUART4.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    ButtonUART4.setPosition(15, 15, 50, 50);
    ButtonUART4.setAlpha(0);
    containerUART4.add(ButtonUART4);

    textUART4.setXY(18, 84);
    textUART4.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textUART4.setLinespacing(0);
    textUART4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ASNL));
    containerUART4.add(textUART4);

    containerUART5.setPosition(209, 240, 80, 107);

    circleUART5.setPosition(0, 0, 80, 80);
    circleUART5.setCenter(40, 40);
    circleUART5.setRadius(30);
    circleUART5.setLineWidth(0);
    circleUART5.setArc(0, 360);
    circleUART5Painter.setColor(touchgfx::Color::getColorFromRGB(144, 255, 0));
    circleUART5.setPainter(circleUART5Painter);
    containerUART5.add(circleUART5);

    ButtonUART5.setBoxWithBorderPosition(0, 0, 50, 50);
    ButtonUART5.setBorderSize(5);
    ButtonUART5.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    ButtonUART5.setPosition(15, 15, 50, 50);
    ButtonUART5.setAlpha(0);
    containerUART5.add(ButtonUART5);

    textUART5.setXY(18, 84);
    textUART5.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textUART5.setLinespacing(0);
    textUART5.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZAEM));
    containerUART5.add(textUART5);

    containerUART6.setPosition(315, 240, 80, 107);

    circleUART6.setPosition(0, 0, 80, 80);
    circleUART6.setCenter(40, 40);
    circleUART6.setRadius(30);
    circleUART6.setLineWidth(0);
    circleUART6.setArc(0, 360);
    circleUART6Painter.setColor(touchgfx::Color::getColorFromRGB(144, 255, 0));
    circleUART6.setPainter(circleUART6Painter);
    containerUART6.add(circleUART6);

    ButtonUART6.setBoxWithBorderPosition(0, 0, 50, 50);
    ButtonUART6.setBorderSize(5);
    ButtonUART6.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    ButtonUART6.setPosition(15, 15, 50, 50);
    ButtonUART6.setAlpha(0);
    containerUART6.add(ButtonUART6);

    textUART6.setXY(18, 84);
    textUART6.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textUART6.setLinespacing(0);
    textUART6.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PWLN));
    containerUART6.add(textUART6);

    containerUART7.setPosition(410, 240, 80, 107);

    circleUART7.setPosition(0, 0, 80, 80);
    circleUART7.setCenter(40, 40);
    circleUART7.setRadius(30);
    circleUART7.setLineWidth(0);
    circleUART7.setArc(0, 360);
    circleUART7Painter.setColor(touchgfx::Color::getColorFromRGB(144, 255, 0));
    circleUART7.setPainter(circleUART7Painter);
    containerUART7.add(circleUART7);

    ButtonUART7.setBoxWithBorderPosition(0, 0, 50, 50);
    ButtonUART7.setBorderSize(5);
    ButtonUART7.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    ButtonUART7.setPosition(15, 15, 50, 50);
    ButtonUART7.setAlpha(0);
    containerUART7.add(ButtonUART7);

    textUART7.setXY(18, 84);
    textUART7.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textUART7.setLinespacing(0);
    textUART7.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UHDY));
    containerUART7.add(textUART7);

    containerUART8.setPosition(511, 240, 80, 107);

    circleUART8.setPosition(0, 0, 80, 80);
    circleUART8.setCenter(40, 40);
    circleUART8.setRadius(30);
    circleUART8.setLineWidth(0);
    circleUART8.setArc(0, 360);
    circleUART8Painter.setColor(touchgfx::Color::getColorFromRGB(144, 255, 0));
    circleUART8.setPainter(circleUART8Painter);
    containerUART8.add(circleUART8);

    ButtonUART8.setBoxWithBorderPosition(0, 0, 50, 50);
    ButtonUART8.setBorderSize(5);
    ButtonUART8.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    ButtonUART8.setPosition(15, 15, 50, 50);
    ButtonUART8.setAlpha(0);
    containerUART8.add(ButtonUART8);

    textUART8.setXY(13, 84);
    textUART8.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textUART8.setLinespacing(0);
    textUART8.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VRMF));
    containerUART8.add(textUART8);

    containerCAN.setPosition(137, 430, 50, 50);

    Button_CAN.setBoxWithBorderPosition(0, 0, 50, 50);
    Button_CAN.setBorderSize(5);
    Button_CAN.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    Button_CAN.setPosition(0, 0, 50, 50);
    Button_CAN.setAlpha(0);
    Button_CAN.setAction(flexButtonCallback);
    containerCAN.add(Button_CAN);

    textAreaCAN.setXY(9, 14);
    textAreaCAN.setColor(touchgfx::Color::getColorFromRGB(161, 157, 157));
    textAreaCAN.setLinespacing(0);
    textAreaCAN.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A3TK));
    containerCAN.add(textAreaCAN);

    containerLIN.setPosition(238, 430, 54, 50);

    Button_LIN.setBoxWithBorderPosition(0, 0, 55, 50);
    Button_LIN.setBorderSize(5);
    Button_LIN.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    Button_LIN.setPosition(-2, 0, 55, 50);
    Button_LIN.setAlpha(0);
    Button_LIN.setAction(flexButtonCallback);
    containerLIN.add(Button_LIN);

    textAreaLIN.setXY(9, 14);
    textAreaLIN.setColor(touchgfx::Color::getColorFromRGB(161, 157, 157));
    textAreaLIN.setLinespacing(0);
    textAreaLIN.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ALI2));
    containerLIN.add(textAreaLIN);

    containerUART.setPosition(333, 430, 52, 50);

    Button_UART.setBoxWithBorderPosition(0, 0, 47, 50);
    Button_UART.setBorderSize(5);
    Button_UART.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    Button_UART.setPosition(4, 0, 47, 50);
    Button_UART.setAlpha(0);
    containerUART.add(Button_UART);

    textAreaUART.setXY(5, 14);
    textAreaUART.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textAreaUART.setLinespacing(0);
    textAreaUART.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L4G1));
    containerUART.add(textAreaUART);

    containerFlexray.setPosition(410, 430, 102, 50);

    Button_Flexray.setBoxWithBorderPosition(0, 0, 102, 50);
    Button_Flexray.setBorderSize(5);
    Button_Flexray.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    Button_Flexray.setPosition(0, 0, 102, 50);
    Button_Flexray.setAlpha(0);
    Button_Flexray.setAction(flexButtonCallback);
    containerFlexray.add(Button_Flexray);

    textAreaFlexray.setXY(13, 14);
    textAreaFlexray.setColor(touchgfx::Color::getColorFromRGB(161, 157, 157));
    textAreaFlexray.setLinespacing(0);
    textAreaFlexray.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ODQ2));
    containerFlexray.add(textAreaFlexray);

    containerETH.setPosition(534, 430, 102, 50);

    Button_ETH.setBoxWithBorderPosition(0, 0, 102, 50);
    Button_ETH.setBorderSize(5);
    Button_ETH.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    Button_ETH.setPosition(0, 0, 102, 50);
    Button_ETH.setAlpha(0);
    Button_ETH.setAction(flexButtonCallback);
    containerETH.add(Button_ETH);

    textAreaETH.setXY(13, 14);
    textAreaETH.setColor(touchgfx::Color::getColorFromRGB(161, 157, 157));
    textAreaETH.setLinespacing(0);
    textAreaETH.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JB7L));
    containerETH.add(textAreaETH);

    Button_Bus_Main.setXY(0, 0);
    Button_Bus_Main.setBitmaps(touchgfx::Bitmap(BITMAP_IC_ACTION_ARROW_LEFT_LIGHT_ID), touchgfx::Bitmap(BITMAP_IC_ACTION_ARROW_LEFT_ID));
    Button_Bus_Main.setAction(buttonCallback);

    add(__background);
    add(image1);
    add(containerUART1);
    add(containerUART2);
    add(containerUART3);
    add(containerUART4);
    add(containerUART5);
    add(containerUART6);
    add(containerUART7);
    add(containerUART8);
    add(containerCAN);
    add(containerLIN);
    add(containerUART);
    add(containerFlexray);
    add(containerETH);
    add(Button_Bus_Main);
}

void sub_Busload_UARTViewBase::setupScreen()
{

}

void sub_Busload_UARTViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &Button_Bus_Main)
    {
        //Interaction1
        //When Button_Bus_Main clicked change screen to MainBoard
        //Go to MainBoard with no screen transition
        application().gotoMainBoardScreenNoTransition();
    }
}

void sub_Busload_UARTViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &Button_CAN)
    {
        //Interaction2
        //When Button_CAN clicked change screen to sub_Busload_CAN
        //Go to sub_Busload_CAN with no screen transition
        application().gotosub_Busload_CANScreenNoTransition();
    }
    else if (&src == &Button_LIN)
    {
        //Interaction3
        //When Button_LIN clicked change screen to sub_Busload_LIN
        //Go to sub_Busload_LIN with no screen transition
        application().gotosub_Busload_LINScreenNoTransition();
    }
    else if (&src == &Button_Flexray)
    {
        //Interaction4
        //When Button_Flexray clicked change screen to sub_Busload_Flexray
        //Go to sub_Busload_Flexray with no screen transition
        application().gotosub_Busload_FlexrayScreenNoTransition();
    }
    else if (&src == &Button_ETH)
    {
        //Interaction5
        //When Button_ETH clicked change screen to sub_Busload_ETH
        //Go to sub_Busload_ETH with no screen transition
        application().gotosub_Busload_ETHScreenNoTransition();
    }
}
