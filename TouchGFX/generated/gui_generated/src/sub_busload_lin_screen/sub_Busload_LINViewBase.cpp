/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/sub_busload_lin_screen/sub_Busload_LINViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>


sub_Busload_LINViewBase::sub_Busload_LINViewBase() :
    buttonCallback(this, &sub_Busload_LINViewBase::buttonCallbackHandler),
    flexButtonCallback(this, &sub_Busload_LINViewBase::flexButtonCallbackHandler)
{

    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);

    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    image1.setXY(0, 0);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_E_1156000_300B6C29_ID));
    image1.setAlpha(101);

    containerLIN1.setPosition(209, 105, 80, 107);

    circleLIN1.setPosition(0, 0, 80, 80);
    circleLIN1.setCenter(40, 40);
    circleLIN1.setRadius(30);
    circleLIN1.setLineWidth(0);
    circleLIN1.setArc(0, 360);
    circleLIN1Painter.setColor(touchgfx::Color::getColorFromRGB(144, 255, 0));
    circleLIN1.setPainter(circleLIN1Painter);
    containerLIN1.add(circleLIN1);

    ButtonLIN1.setBoxWithBorderPosition(0, 0, 50, 50);
    ButtonLIN1.setBorderSize(5);
    ButtonLIN1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    ButtonLIN1.setPosition(15, 15, 50, 50);
    ButtonLIN1.setAlpha(0);
    containerLIN1.add(ButtonLIN1);

    textLIN1.setXY(18, 84);
    textLIN1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textLIN1.setLinespacing(0);
    textLIN1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q1XX));
    containerLIN1.add(textLIN1);

    containerLIN2.setPosition(315, 105, 80, 107);

    circleLIN2.setPosition(0, 0, 80, 80);
    circleLIN2.setCenter(40, 40);
    circleLIN2.setRadius(30);
    circleLIN2.setLineWidth(0);
    circleLIN2.setArc(0, 360);
    circleLIN2Painter.setColor(touchgfx::Color::getColorFromRGB(144, 255, 0));
    circleLIN2.setPainter(circleLIN2Painter);
    containerLIN2.add(circleLIN2);

    ButtonLIN2.setBoxWithBorderPosition(0, 0, 50, 50);
    ButtonLIN2.setBorderSize(5);
    ButtonLIN2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    ButtonLIN2.setPosition(15, 15, 50, 50);
    ButtonLIN2.setAlpha(0);
    containerLIN2.add(ButtonLIN2);

    textLIN2.setXY(18, 84);
    textLIN2.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textLIN2.setLinespacing(0);
    textLIN2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_NRJE));
    containerLIN2.add(textLIN2);

    containerLIN3.setPosition(410, 105, 80, 107);

    circleLIN3.setPosition(0, 0, 80, 80);
    circleLIN3.setCenter(40, 40);
    circleLIN3.setRadius(30);
    circleLIN3.setLineWidth(0);
    circleLIN3.setArc(0, 360);
    circleLIN3Painter.setColor(touchgfx::Color::getColorFromRGB(144, 255, 0));
    circleLIN3.setPainter(circleLIN3Painter);
    containerLIN3.add(circleLIN3);

    ButtonLIN3.setBoxWithBorderPosition(0, 0, 50, 50);
    ButtonLIN3.setBorderSize(5);
    ButtonLIN3.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    ButtonLIN3.setPosition(15, 15, 50, 50);
    ButtonLIN3.setAlpha(0);
    containerLIN3.add(ButtonLIN3);

    textLIN3.setXY(18, 84);
    textLIN3.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textLIN3.setLinespacing(0);
    textLIN3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ID4W));
    containerLIN3.add(textLIN3);

    containerLIN4.setPosition(511, 105, 80, 107);

    circleLIN4.setPosition(0, 0, 80, 80);
    circleLIN4.setCenter(40, 40);
    circleLIN4.setRadius(30);
    circleLIN4.setLineWidth(0);
    circleLIN4.setArc(0, 360);
    circleLIN4Painter.setColor(touchgfx::Color::getColorFromRGB(144, 255, 0));
    circleLIN4.setPainter(circleLIN4Painter);
    containerLIN4.add(circleLIN4);

    ButtonLIN4.setBoxWithBorderPosition(0, 0, 50, 50);
    ButtonLIN4.setBorderSize(5);
    ButtonLIN4.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    ButtonLIN4.setPosition(15, 15, 50, 50);
    ButtonLIN4.setAlpha(0);
    containerLIN4.add(ButtonLIN4);

    textLIN4.setXY(18, 84);
    textLIN4.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textLIN4.setLinespacing(0);
    textLIN4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_NREU));
    containerLIN4.add(textLIN4);

    containerLIN5.setPosition(209, 240, 80, 107);

    circleLIN5.setPosition(0, 0, 80, 80);
    circleLIN5.setCenter(40, 40);
    circleLIN5.setRadius(30);
    circleLIN5.setLineWidth(0);
    circleLIN5.setArc(0, 360);
    circleLIN5Painter.setColor(touchgfx::Color::getColorFromRGB(144, 255, 0));
    circleLIN5.setPainter(circleLIN5Painter);
    containerLIN5.add(circleLIN5);

    ButtonLIN5.setBoxWithBorderPosition(0, 0, 50, 50);
    ButtonLIN5.setBorderSize(5);
    ButtonLIN5.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    ButtonLIN5.setPosition(15, 15, 50, 50);
    ButtonLIN5.setAlpha(0);
    containerLIN5.add(ButtonLIN5);

    textLIN5.setXY(18, 84);
    textLIN5.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textLIN5.setLinespacing(0);
    textLIN5.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LLBD));
    containerLIN5.add(textLIN5);

    containerLIN6.setPosition(315, 240, 80, 107);

    circleLIN6.setPosition(0, 0, 80, 80);
    circleLIN6.setCenter(40, 40);
    circleLIN6.setRadius(30);
    circleLIN6.setLineWidth(0);
    circleLIN6.setArc(0, 360);
    circleLIN6Painter.setColor(touchgfx::Color::getColorFromRGB(144, 255, 0));
    circleLIN6.setPainter(circleLIN6Painter);
    containerLIN6.add(circleLIN6);

    ButtonLIN6.setBoxWithBorderPosition(0, 0, 50, 50);
    ButtonLIN6.setBorderSize(5);
    ButtonLIN6.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    ButtonLIN6.setPosition(15, 15, 50, 50);
    ButtonLIN6.setAlpha(0);
    containerLIN6.add(ButtonLIN6);

    textLIN6.setXY(18, 84);
    textLIN6.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textLIN6.setLinespacing(0);
    textLIN6.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q316));
    containerLIN6.add(textLIN6);

    containerLIN7.setPosition(410, 240, 80, 107);

    circleLIN7.setPosition(0, 0, 80, 80);
    circleLIN7.setCenter(40, 40);
    circleLIN7.setRadius(30);
    circleLIN7.setLineWidth(0);
    circleLIN7.setArc(0, 360);
    circleLIN7Painter.setColor(touchgfx::Color::getColorFromRGB(144, 255, 0));
    circleLIN7.setPainter(circleLIN7Painter);
    containerLIN7.add(circleLIN7);

    ButtonLIN7.setBoxWithBorderPosition(0, 0, 50, 50);
    ButtonLIN7.setBorderSize(5);
    ButtonLIN7.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    ButtonLIN7.setPosition(15, 15, 50, 50);
    ButtonLIN7.setAlpha(0);
    containerLIN7.add(ButtonLIN7);

    textLIN7.setXY(18, 84);
    textLIN7.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textLIN7.setLinespacing(0);
    textLIN7.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SYGE));
    containerLIN7.add(textLIN7);

    containerLIN8.setPosition(511, 240, 80, 107);

    circleLIN8.setPosition(0, 0, 80, 80);
    circleLIN8.setCenter(40, 40);
    circleLIN8.setRadius(30);
    circleLIN8.setLineWidth(0);
    circleLIN8.setArc(0, 360);
    circleLIN8Painter.setColor(touchgfx::Color::getColorFromRGB(144, 255, 0));
    circleLIN8.setPainter(circleLIN8Painter);
    containerLIN8.add(circleLIN8);

    ButtonLIN8.setBoxWithBorderPosition(0, 0, 50, 50);
    ButtonLIN8.setBorderSize(5);
    ButtonLIN8.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    ButtonLIN8.setPosition(15, 15, 50, 50);
    ButtonLIN8.setAlpha(0);
    containerLIN8.add(ButtonLIN8);

    textLIN8.setXY(13, 84);
    textLIN8.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textLIN8.setLinespacing(0);
    textLIN8.setTypedText(touchgfx::TypedText(T___SINGLEUSE_W1SY));
    containerLIN8.add(textLIN8);

    containerCAN.setPosition(137, 430, 50, 50);

    Button_CAN.setBoxWithBorderPosition(0, 0, 50, 50);
    Button_CAN.setBorderSize(5);
    Button_CAN.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    Button_CAN.setPosition(0, 0, 50, 50);
    Button_CAN.setAlpha(0);
    Button_CAN.setAction(flexButtonCallback);
    containerCAN.add(Button_CAN);

    textAreaCAN.setXY(9, 14);
    textAreaCAN.setColor(touchgfx::Color::getColorFromRGB(161, 157, 157));
    textAreaCAN.setLinespacing(0);
    textAreaCAN.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1JGM));
    containerCAN.add(textAreaCAN);

    containerLIN.setPosition(238, 430, 54, 50);

    Button_LIN.setBoxWithBorderPosition(0, 0, 55, 50);
    Button_LIN.setBorderSize(5);
    Button_LIN.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    Button_LIN.setPosition(-2, 0, 55, 50);
    Button_LIN.setAlpha(0);
    containerLIN.add(Button_LIN);

    textAreaLIN.setXY(9, 14);
    textAreaLIN.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textAreaLIN.setLinespacing(0);
    textAreaLIN.setTypedText(touchgfx::TypedText(T___SINGLEUSE_63BY));
    containerLIN.add(textAreaLIN);

    containerUART.setPosition(333, 430, 52, 50);

    Button_UART.setBoxWithBorderPosition(0, 0, 47, 50);
    Button_UART.setBorderSize(5);
    Button_UART.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    Button_UART.setPosition(4, 0, 47, 50);
    Button_UART.setAlpha(0);
    Button_UART.setAction(flexButtonCallback);
    containerUART.add(Button_UART);

    textAreaUART.setXY(5, 14);
    textAreaUART.setColor(touchgfx::Color::getColorFromRGB(161, 157, 157));
    textAreaUART.setLinespacing(0);
    textAreaUART.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZCVR));
    containerUART.add(textAreaUART);

    containerFlexray.setPosition(410, 430, 102, 50);

    Button_Flexray.setBoxWithBorderPosition(0, 0, 102, 50);
    Button_Flexray.setBorderSize(5);
    Button_Flexray.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    Button_Flexray.setPosition(0, 0, 102, 50);
    Button_Flexray.setAlpha(0);
    Button_Flexray.setAction(flexButtonCallback);
    containerFlexray.add(Button_Flexray);

    textAreaFlexray.setXY(13, 14);
    textAreaFlexray.setColor(touchgfx::Color::getColorFromRGB(161, 157, 157));
    textAreaFlexray.setLinespacing(0);
    textAreaFlexray.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LXMW));
    containerFlexray.add(textAreaFlexray);

    containerETH.setPosition(534, 430, 102, 50);

    Button_ETH.setBoxWithBorderPosition(0, 0, 102, 50);
    Button_ETH.setBorderSize(5);
    Button_ETH.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    Button_ETH.setPosition(0, 0, 102, 50);
    Button_ETH.setAlpha(0);
    Button_ETH.setAction(flexButtonCallback);
    containerETH.add(Button_ETH);

    textAreaETH.setXY(13, 14);
    textAreaETH.setColor(touchgfx::Color::getColorFromRGB(161, 157, 157));
    textAreaETH.setLinespacing(0);
    textAreaETH.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LF9E));
    containerETH.add(textAreaETH);

    Button_Bus_Main.setXY(0, 0);
    Button_Bus_Main.setBitmaps(touchgfx::Bitmap(BITMAP_IC_ACTION_ARROW_LEFT_LIGHT_ID), touchgfx::Bitmap(BITMAP_IC_ACTION_ARROW_LEFT_ID));
    Button_Bus_Main.setAction(buttonCallback);

    add(__background);
    add(image1);
    add(containerLIN1);
    add(containerLIN2);
    add(containerLIN3);
    add(containerLIN4);
    add(containerLIN5);
    add(containerLIN6);
    add(containerLIN7);
    add(containerLIN8);
    add(containerCAN);
    add(containerLIN);
    add(containerUART);
    add(containerFlexray);
    add(containerETH);
    add(Button_Bus_Main);
}

void sub_Busload_LINViewBase::setupScreen()
{

}

void sub_Busload_LINViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &Button_Bus_Main)
    {
        //Interaction1
        //When Button_Bus_Main clicked change screen to MainBoard
        //Go to MainBoard with no screen transition
        application().gotoMainBoardScreenNoTransition();
    }
}

void sub_Busload_LINViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &Button_CAN)
    {
        //Interaction2
        //When Button_CAN clicked change screen to sub_Busload_CAN
        //Go to sub_Busload_CAN with no screen transition
        application().gotosub_Busload_CANScreenNoTransition();
    }
    else if (&src == &Button_UART)
    {
        //Interaction3
        //When Button_UART clicked change screen to sub_Busload_UART
        //Go to sub_Busload_UART with no screen transition
        application().gotosub_Busload_UARTScreenNoTransition();

        //Interaction4
        //When Button_UART clicked change screen to sub_Busload_UART
        //Go to sub_Busload_UART with no screen transition
        application().gotosub_Busload_UARTScreenNoTransition();
    }
    else if (&src == &Button_Flexray)
    {
        //Interaction5
        //When Button_Flexray clicked change screen to sub_Busload_Flexray
        //Go to sub_Busload_Flexray with no screen transition
        application().gotosub_Busload_FlexrayScreenNoTransition();
    }
    else if (&src == &Button_ETH)
    {
        //Interaction6
        //When Button_ETH clicked change screen to sub_Busload_ETH
        //Go to sub_Busload_ETH with no screen transition
        application().gotosub_Busload_ETHScreenNoTransition();
    }
}
