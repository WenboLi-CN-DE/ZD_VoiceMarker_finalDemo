/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREEN1VIEWBASE_HPP
#define SCREEN1VIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screen1_screen/Screen1Presenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/ButtonWithIcon.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/containers/Slider.hpp>
#include <touchgfx/widgets/ToggleButton.hpp>

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase() {}
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void function1()
    {
        // Override and implement this function in Screen1
    }

    virtual void functionPlay()
    {
        // Override and implement this function in Screen1
    }

    virtual void functionStop()
    {
        // Override and implement this function in Screen1
    }

    virtual void functionPause()
    {
        // Override and implement this function in Screen1
    }

    virtual void functionRecordStart()
    {
        // Override and implement this function in Screen1
    }

    virtual void SWITCH_LED()
    {
        // Override and implement this function in Screen1
    }

    virtual void functionVolume(int value)
    {
        // Override and implement this function in Screen1
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image image1;
    touchgfx::Button button1;
    touchgfx::Box box1;
    touchgfx::TextArea textArea5;
    touchgfx::ButtonWithIcon buttonPlay;
    touchgfx::ButtonWithIcon buttonRecordStart;
    touchgfx::ButtonWithIcon buttonPause;
    touchgfx::TextAreaWithTwoWildcards textArea6;
    touchgfx::ButtonWithIcon buttonStop;
    touchgfx::TextAreaWithOneWildcard textArea7;
    touchgfx::Slider slider1;
    touchgfx::ToggleButton toggleButton1;
    touchgfx::TextAreaWithOneWildcard textArea10;
    touchgfx::TextAreaWithOneWildcard textAreaVolume;
    touchgfx::ButtonWithIcon buttonWithIcon1;
    touchgfx::Button button2;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREA6BUFFER1_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea6Buffer1[TEXTAREA6BUFFER1_SIZE];
    static const uint16_t TEXTAREA6BUFFER2_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea6Buffer2[TEXTAREA6BUFFER2_SIZE];
    static const uint16_t TEXTAREA7_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea7Buffer[TEXTAREA7_SIZE];
    static const uint16_t TEXTAREA10_SIZE = 20;
    touchgfx::Unicode::UnicodeChar textArea10Buffer[TEXTAREA10_SIZE];
    static const uint16_t TEXTAREAVOLUME_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textAreaVolumeBuffer[TEXTAREAVOLUME_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Screen1ViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<Screen1ViewBase, const touchgfx::Slider&, int> sliderValueChangedCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value);

};

#endif // SCREEN1VIEWBASE_HPP
